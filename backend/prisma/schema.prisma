generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GroupRole {
  admin
  member
}

enum MessageType {
  text
  file
}

model User {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @default(uuid())
  email      String   @unique
  name       String
  password   String
  fcm_token  String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  memberships       GroupMembership[]
  messages_sent     Message[]         @relation("MessagesSent")
  messages_received Message[]         @relation("MessagesReceived")

  @@map("User")
}

model Group {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  memberships GroupMembership[]
  messages    Message[]         @relation("GroupMessages")

  @@map("Group")
}

model GroupMembership {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  user_id   Int
  group_id  Int
  role      GroupRole @default(member)
  joined_at DateTime  @default(now())

  user  User  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  group Group @relation(fields: [group_id], references: [id], onDelete: Cascade)

  @@unique([user_id, group_id])
  @@map("GroupMembership")
}

model Message {
  id           Int         @id @default(autoincrement())
  uuid         String      @unique @default(uuid())
  sender_id    Int
  receiver_id  Int?
  group_id     Int?
  content      String
  message_type MessageType @default(text)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt

  sender   User   @relation("MessagesSent", fields: [sender_id], references: [id], onDelete: Cascade)
  receiver User?  @relation("MessagesReceived", fields: [receiver_id], references: [id], onDelete: Cascade)
  group    Group? @relation("GroupMessages", fields: [group_id], references: [id], onDelete: Cascade)

  @@map("Message")
}
