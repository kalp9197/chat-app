generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum MessageType {
  text
  image
  file
}

model User {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  uuid              String         @unique @default(uuid())
  name              String
  email             String         @unique
  password          String
  fcm_token         String?
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt

  memberships       GroupMembership[]
  messages_sent     Message[]      @relation("MessagesSent")
  messages_received Message[]      @relation("MessagesReceived")
}

model Group {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId
  uuid         String            @unique @default(uuid())
  name         String
  created_at   DateTime          @default(now())
  updated_at   DateTime          @updatedAt

  memberships  GroupMembership[]
  messages     Message[]         @relation("GroupMessages")
}

model GroupMembership {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  uuid       String   @unique @default(uuid())
  user_uuid  String
  group_uuid String
  role       String   // e.g., "admin", "member"
  joined_at  DateTime @default(now())

  user       User     @relation(fields: [user_uuid], references: [uuid])
  group      Group    @relation(fields: [group_uuid], references: [uuid])

  @@unique([user_uuid, group_uuid])
}

model Message {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  uuid         String      @unique @default(uuid())
  sender_uuid  String
  receiver_uuid String?    // nullable: set for direct messages
  group_uuid   String?    // nullable: set for group messages
  content      String
  message_type MessageType @default(text)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt

  // Relations:
  sender   User   @relation("MessagesSent", fields: [sender_uuid], references: [uuid])
  receiver User?  @relation("MessagesReceived", fields: [receiver_uuid], references: [uuid])
  group    Group? @relation("GroupMessages", fields: [group_uuid], references: [uuid])
}
